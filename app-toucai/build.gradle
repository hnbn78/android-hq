apply plugin: 'com.android.application'
apply plugin: 'com.growingio.android'

/**
 * @return 现在时间字符串
 */
def releaseTime() {
    return new Date().format("yyyy-MM-dd-HH-mm", TimeZone.getTimeZone("GMT+8"))
}

/**
 * @return 现在时间字符串
 */
def releaseTimeReadable() {
    return new Date().format("yyyy年MM月dd日HH时mm分", TimeZone.getTimeZone("GMT+8"))
}

/**
 * 从../signingfiles/keystore.properties下读取签名文件的位置和密码
 * 文件的位置可以根据实际情况配置，放入本地或者代码里，以及是否在版本控制中
 * 如果没有相关文件或者参数不对将抛出异常
 */
def setSigningProperties() {
    def propFile = file('../signingfiles/keystore.properties')
    if (propFile.canRead()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            println 'signing.properties found but some entries are missing'
            throw new Exception("signing.properties found but some entries are missing")
            //android.buildTypes.release.signingConfig = null
        }
    } else {
        println 'signing.properties not found'
        throw new Exception("signing.properties not found:" + propFile.absolutePath)
        //android.buildTypes.release.signingConfig = null
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "com.shark.tc"
        minSdkVersion 17
        targetSdkVersion 27

        versionCode 510
        versionName "5.1.0"

        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //growingio
        resValue("string", "growingio_project_id", "871f580350b28a17")
        resValue("string", "growingio_url_scheme", "growing.67fdfd0ee2010f07")

        //ndk {
        //   // 设置支持的SO库架构
        //    abiFilters 'armeabi','armeabi-v7a', 'x86','mips'
        //}

    }

    signingConfigs {
        release {
            //配置签名两种方式

            //1.自己读取签名配置
            setSigningProperties()

            //2.这里设置文件签名相关参数宏
            //在工程根目录或者~/.gradle/下的gradle.properties属性文件中定义
            //storeFile file(MYAPP_RELEASE_STORE_FILE)
            //storePassword MYAPP_RELEASE_STORE_PASSWORD
            //keyAlias MYAPP_RELEASE_KEY_ALIAS
            //keyPassword MYAPP_RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //注意在这里设置签名，否则设置了签名参数也不会签名
            signingConfig signingConfigs.release
            //shrinkResources true  // 移除无用的resource文件
        }
    }

    dataBinding {
        enabled = true
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    flavorDimensions("custom_flag")

    productFlavors {

        //以custom开头 加入不同公司版
        //在这里我可以更改包名 app在手机中可以和其他flavor编译的app共存
        //银猫二
        flag_feiyu {
            dimension "custom_flag"
            applicationId "com.my.app.tcym2"
            versionCode 121
            versionName "1.2.1"//7月9打正式版
        }

        //金烽2
        flag_jinfeng2 {
            dimension "custom_flag"
            applicationId "com.my.app.jf2"
            versionCode 118
            versionName "1.1.8"//10月10打正式版 更新
            //备用
//            versionCode 203
//            versionName "2.0.3"//10月10打正式版 更新
        }

        //金烽3
        flag_jinfeng3 {
            dimension "custom_flag"
            applicationId "com.my.app.huanq"
            versionCode 105
            versionName "1.0.5"//9月18新增平台
        }

        //-------------------------------------以上是正在运营平台--------------------------------------

        //正式发布
        flag_toucai {
            dimension "custom_flag"
            applicationId "com.shark.tc"
            versionCode 516
            versionName "5.1.6"//1月7
        }

        //Bat
        flag_bat {
            dimension "custom_flag"
            applicationId "com.shark.tianmao"
            versionCode 107
            versionName "1.0.7"//12月22待升版
        }

        //英雄娱乐城
        flag_hero {
            dimension "custom_flag"
            applicationId "com.shark.hero"
            versionCode 101
            versionName "1.0.1"//1月15新建
        }

        //demo发布
        flag_toucai_demo {
            dimension "custom_flag"
            applicationId "com.desheng.app.toucai"
        }

        flag_toucai_channel {
            dimension "custom_flag"
            applicationId "com.desheng.app.toucai_channel"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "hijacky"]
        }

        //试玩版本
        flag_shiwan {
            dimension "custom_flag"
            applicationId "com.shark.tc"
            versionCode 100
            versionName "1.0.0"
        }

        //所有编译方式BuildType都会遍历flavors
        productFlavors.all { flavor ->

            //区分环境 ：变量 ENV
            //可以通过buildConfig，也可以通过resValue
            if (name.equals("env_develop")) {
                buildConfigField "String", "ENV", "\"development\""
                resValue "string", "env", "development"
            } else {
                buildConfigField "String", "ENV", "\"production\""
                resValue "string", "env", "production"
            }

            //当要加入渠道时；例如友盟
            /**
             if (!name.contains("chanel"))
             flavor.manifestPlaceholders = [UMENG_CHANNEL: "default"]
             else
             flavor.manifestPlaceholders = [UMENG_CHANNEL: name]
             **/
            flavor.manifestPlaceholders = [BUILD_DATE: releaseTimeReadable()]
        }
    }

    //输出文件参数设置
    applicationVariants.all { variant ->
        variant.outputs.each { output ->

            def outputFile = output.outputFile
            //只定义release编译方式的apk文件名
            if (outputFile != null && outputFile.name.endsWith('.apk') && 'release'.equals(variant.buildType.name)) {

                def flavor = variant.productFlavors[0].name

                //不同的falvor，定义不同的输出的apk文件名前缀
                def prefix
                if (flavor.contains("flag_")) {
                    prefix = flavor.replace("flag_", "")
                } else {
                    prefix = "gm_" + flavor
                }

                //定义输出apk文件名
                def fileName = "${prefix}_${variant.versionName}_${releaseTime()}.apk".toLowerCase()
                output.outputFileName = fileName
            }
        }
    }

    dependencies {
        compile 'com.growingio.android:vds-android-agent:2.4.3@aar'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':base')
    testCompile 'junit:junit:4.12'

    compile 'com.zhihu.android:matisse:0.5.2-beta3'
    compile 'com.github.chrisbanes:PhotoView:2.0.0'

    configurations.all {
        resolutionStrategy {
            force 'com.android.support:support-v4:27.1.0'
            force 'com.android.support:design:27.1.0'
        }
    }
}
